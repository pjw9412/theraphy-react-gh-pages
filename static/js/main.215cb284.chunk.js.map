{"version":3,"sources":["Table.js","userTrain.js","InfoModal.js","Upload.js","App.js","serviceWorker.js","index.js"],"names":["PrintTableRow","array","no","division","item","first","second","third","fourth","fifth","sixth","seventh","eighth","ninth","Table","house","HList","pertinentList","forEach","ab","push","find","abc","console","log","intRow","j","length","slice","resultRow","map","n","className","key","defaultProps","ReactGA","initialize","pageview","window","location","pathname","search","customStyles","content","top","left","right","bottom","marginRight","width","transform","padding","overlay","backgroundColor","AnimatedModal","props","React","useState","incorrectModalOpen","incorrectModalSet","click","name","a","imagePost","clear","banner","bannerStatus","who","event","category","action","fileName","axios","post","userTrain","hash","Button","variant","color","onClick","e","closeTimeoutMS","isOpen","onRequestClose","style","contentLabel","id","IconButton","size","Modal","setAppElement","ModalWrapper","styled","div","visible","ModalOverlay","ModalInner","InfoModal","children","setVisible","textAlign","href","override","css","getRandomColor","i","Math","floor","random","Upload","error","fail","predictions","loading","vote","showResult","reload","state","SetState","undefined","showBanner","status","setTimeout","readFileAsync","inputFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","output","document","getElementById","src","result","readAsDataURL","onDrop","pictureFiles","canvas","ctx","getContext","clearRect","height","formData","FormData","append","start","Date","getTime","response","elapsed","data","img","drawImage","success","text","label","caption","coordinate","x","y","beginPath","lineWidth","font","fillStyle","strokeStyle","fillText","score","toFixed","rect","stroke","path","voteChaewon","voteYuri","voteYena","useEffect","addEventListener","items","clipboardData","originalEvent","JSON","stringify","blob","type","indexOf","getAsFile","title","alt","fontSize","prediction","multiple","acceptedFiles","getRootProps","getInputProps","accept","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.215cb284.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.scss';\r\n\r\nfunction PrintTableRow({ array }) {\r\n    return (\r\n        <tr>\r\n            <td>{array.no}</td>\r\n            <td>{array.division}</td>\r\n            <td>{array.item}</td>\r\n            <td>{array.first}</td>\r\n            <td>{array.second}</td>\r\n            <td>{array.third}</td>\r\n            <td>{array.fourth}</td>\r\n            <td>{array.fifth}</td>\r\n            <td>{array.sixth}</td>\r\n            <td>{array.seventh}</td>\r\n            <td>{array.eighth}</td>\r\n            <td>{array.ninth}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction Table({ house }) {\r\n    // 논문에 제시된 채점표 항목\r\n    const HList = [\r\n        {\r\n            no: 0,\r\n            division: '가',\r\n            item: '가',\r\n            first: '가',\r\n            second: '가',\r\n            third: '가',\r\n            fourth: '가',\r\n            fifth: '가',\r\n            sixth: '가',\r\n            seventh: '가',\r\n            eighth: '가',\r\n            ninth: '가'\r\n        },\r\n        {\r\n            no: 4,\r\n            division: '크기',\r\n            item: '지나치게 큰 집',\r\n            first: 1,\r\n            second: 1,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 0,\r\n            sixth: 0,\r\n            seventh: 0,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 5,\r\n            division: '크기',\r\n            item: '지나치게 작은집',\r\n            first: 0,\r\n            second: 0,\r\n            third: 1,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 1,\r\n            seventh: 0,\r\n            eighth: 1,\r\n            ninth: 1\r\n        },\r\n        {\r\n            no: 7,\r\n            division: '위치',\r\n            item: '좌측에 위치한 집',\r\n            first: 0,\r\n            second: 0,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 0,\r\n            seventh: 1,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 8,\r\n            division: '위치',\r\n            item: '우측에 위치한 집',\r\n            first: 1,\r\n            second: 0,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 0,\r\n            sixth: 0,\r\n            seventh: 0,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 9,\r\n            division: '위치',\r\n            item: '하단에 위치한 집',\r\n            first: 0,\r\n            second: 0,\r\n            third: 1,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 1,\r\n            seventh: 0,\r\n            eighth: 1,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 12,\r\n            division: '지붕',\r\n            item: '과도하게 큰 지붕',\r\n            first: 1,\r\n            second: 0,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 0,\r\n            sixth: 1,\r\n            seventh: 1,\r\n            eighth: 0,\r\n            ninth: 1\r\n        },\r\n        {\r\n            no: 18,\r\n            division: '현관문',\r\n            item: '현관문이 과하게 클 경우',\r\n            first: 0,\r\n            second: 0,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 0,\r\n            seventh: 1,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 19,\r\n            division: '현관문',\r\n            item: '현관문이 과하게 작을 경우',\r\n            first: 0,\r\n            second: 0,\r\n            third: 1,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 1,\r\n            seventh: 1,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 22,\r\n            division: '현관문',\r\n            item: '현관문의 생략',\r\n            first: 0,\r\n            second: 1,\r\n            third: 1,\r\n            fourth: 1,\r\n            fifth: 1,\r\n            sixth: 1,\r\n            seventh: 1,\r\n            eighth: 1,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 23,\r\n            division: '창문',\r\n            item: '창문의 생략',\r\n            first: 0,\r\n            second: 0,\r\n            third: 0,\r\n            fourth: 1,\r\n            fifth: 1,\r\n            sixth: 0,\r\n            seventh: 0,\r\n            eighth: 1,\r\n            ninth: 1\r\n        },\r\n        {\r\n            no: 24,\r\n            division: '창문',\r\n            item: '3개 이상의 많은 창문',\r\n            first: 0,\r\n            second: 1,\r\n            third: 0,\r\n            fourth: 0,\r\n            fifth: 0,\r\n            sixth: 0,\r\n            seventh: 0,\r\n            eighth: 1,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 27,\r\n            division: '굴뚝',\r\n            item: '굴뚝의 연기',\r\n            first: 0,\r\n            second: 0,\r\n            third: 1,\r\n            fourth: 0,\r\n            fifth: 1,\r\n            sixth: 0,\r\n            seventh: 0,\r\n            eighth: 0,\r\n            ninth: 0\r\n        },\r\n        {\r\n            no: 31,\r\n            division: '기타',\r\n            item: '울타리의 표현',\r\n            first: 0,\r\n            second: 1,\r\n            third: 0,\r\n            fourth: 1,\r\n            fifth: 1,\r\n            sixth: 1,\r\n            seventh: 0,\r\n            eighth: 1,\r\n            ninth: 0\r\n        }\r\n    ];\r\n\r\n    // 입력한 그림이 채점표(HList)중에서 해당되는 부분(pertinentList)만을 찾는다.\r\n    let pertinentList = [];\r\n    house.forEach(ab => {\r\n        pertinentList.push(HList.find(abc => abc.no === ab));\r\n    });\r\n    console.log(pertinentList);\r\n\r\n    let intRow = [];\r\n    for(let j = 0; j < pertinentList.length; j++){\r\n        intRow.push(pertinentList[j].slice(3,9));\r\n    }\r\n    console.log(intRow);\r\n\r\n    let resultRow = intRow.map(n => n + n);\r\n    console.log(resultRow);\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        // https://codepen.io/alexerlandsson/pen/mPWgpO\r\n        <div className=\"tableContainer\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>번호</th>\r\n                        <th>구분</th>\r\n                        <th>항목</th>\r\n                        <th>공격성</th>\r\n                        <th>사회불안</th>\r\n                        <th>우울</th>\r\n                        <th>대인회피</th>\r\n                        <th>자존감</th>\r\n                        <th>정서불안</th>\r\n                        <th>애정결핍</th>\r\n                        <th>열등감</th>\r\n                        <th>퇴행</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* https://flaviocopes.com/react-how-to-loop/ */}\r\n                    {pertinentList ? (\r\n                        pertinentList.map(abc => {\r\n                            return <PrintTableRow array={abc} key={abc.no} />;\r\n                        })\r\n                    ) : (\r\n                        <td>nothing</td>\r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {resultRow ? (\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>{resultRow['first']}</td>\r\n                            <td>{resultRow['second']}</td>\r\n                            <td>{resultRow['third']}</td>\r\n                            <td>{resultRow['fourth']}</td>\r\n                            <td>{resultRow['fifth']}</td>\r\n                            <td>{resultRow['sixth']}</td>\r\n                            <td>{resultRow['seventh']}</td>\r\n                            <td>{resultRow['eighth']}</td>\r\n                            <td>{resultRow['ninth']}</td>\r\n                        </tr>\r\n                    ) : (\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                    )}\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nTable.defaultProps = {\r\n    house: [0]\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { IconButton, Button } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\nimport ReactGA from \"react-ga\";\r\nconst trackingId = \"UA-148371899-1\";\r\nReactGA.initialize(trackingId);\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    width: \"270px\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    padding: \"30px\",\r\n  },\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\nexport default function AnimatedModal(props) {\r\n  const [incorrectModalOpen, incorrectModalSet] = React.useState(false);\r\n  async function click(name) {\r\n    await imagePost(name);\r\n    incorrectModalSet(false);\r\n    props.clear();\r\n    props.banner({ bannerStatus: true });\r\n  }\r\n  async function imagePost(who) {\r\n    ReactGA.event({ category: \"userTrain\", action: \"updateDB\" });\r\n    if (props.fileName !== \"\") {\r\n      try {\r\n        return await axios.post(\"https://joyuriz.shop/userTrain\", {\r\n          fileName: props.fileName,\r\n          userTrain: who,\r\n          hash: props.hash,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"userTrain\">\r\n      <Button\r\n        className=\"wrong\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={(e) => incorrectModalSet(true)}\r\n      >\r\n        틀렸어요 ㅜ.ㅜ\r\n      </Button>\r\n      <Modal\r\n        closeTimeoutMS={500}\r\n        isOpen={incorrectModalOpen}\r\n        onRequestClose={(e) => incorrectModalSet(false)}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div id=\"exitButton\">\r\n          <IconButton\r\n            id=\"exitIcon\"\r\n            size=\"small\"\r\n            onClick={(e) => incorrectModalSet(false)}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"member\">\r\n          <h2>정답을 알려주세요</h2>\r\n          <p>지금 입력하신 답변은 추후에 반영됩니다.</p>\r\n          <div>\r\n            <Button\r\n              id=\"chaewon\"\r\n              variant=\"contained\"\r\n              onClick={(e) => click(\"Chaewon\")}\r\n            >\r\n              김채원\r\n            </Button>\r\n            <Button\r\n              id=\"yuri\"\r\n              variant=\"contained\"\r\n              onClick={(e) => click(\"Yuri\")}\r\n            >\r\n              조유리\r\n            </Button>\r\n            <Button\r\n              id=\"yena\"\r\n              variant=\"contained\"\r\n              onClick={(e) => click(\"Yena\")}\r\n            >\r\n              최예나\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 모달 제작 참고\r\n// https://medium.com/@bestseob93/%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%AA%A8%EB%8B%AC-react-modal-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd003458e9d\r\n\r\nfunction InfoModal({ children }) {\r\n  const [visible, setVisible] = useState(true);\r\n  const closeModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <ModalOverlay>\r\n          <ModalWrapper>\r\n            <ModalInner className=\"modal-inner\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h1>\r\n                  <span>HTP 검사</span>\r\n                </h1>\r\n              </div>\r\n              <ul>\r\n                <li>\r\n                  <div>\r\n                    본 서비스는 <strong>HTP(House-Tree-Person)</strong> 검사를\r\n                    시행해볼 수 있는 웹 페이지 입니다.\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    업로드한 모든 사진은 <strong>딥러닝 모델을 학습</strong>{\" \"}\r\n                    하는데 사용될 수 있습니다.\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    첨부파일의 최대 용량은 <strong>10MB</strong>로 제한되어\r\n                    있습니다.\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    파일 확장자는 <strong>jpg, png</strong>만 가능합니다.\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>\r\n                    기타 문의사항은{\" \"}\r\n                    <a href=\"mailto:inerplat@gmail.com\">pjwts9412@gmail.com</a>\r\n                    으로 문의 바랍니다.\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <button onClick={closeModal}>시작하기</button>\r\n            </ModalInner>\r\n          </ModalWrapper>\r\n        </ModalOverlay>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ModalWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(visible) => (visible ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nconst ModalOverlay = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(visible) => (visible ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`;\r\n/* ${(props) =>\r\n    props.disappear &&\r\n    css`\r\n      display: none;\r\n    `} */\r\nconst ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 720px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n\r\n  button {\r\n    background-color: #da77f2;\r\n    width: 100%;\r\n    border: 0;\r\n    padding: 10px 0;\r\n    margin: 5px 0;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background-color: #4db6ac;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    counter-reset: index;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    counter-increment: index;\r\n    display: flex;\r\n    padding: 12px 0;\r\n    box-sizing: border-box;\r\n  }\r\n  li::before {\r\n    content: counters(index, \".\", decimal-leading-zero);\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    min-width: 50px;\r\n    font-variant-numeric: tabular-nums;\r\n    align-self: flex-start;\r\n    background-color: #ff509f;\r\n    background-attachment: fixed;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n`;\r\n\r\nexport default InfoModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './Table';\r\nimport { css } from '@emotion/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AnimatedModal from './userTrain';\r\nimport Dropzone from 'react-dropzone';\r\nimport Banner from 'react-js-banner';\r\nimport PropagateLoader from 'react-spinners/PropagateLoader';\r\nimport './Upload.scss';\r\n// import { useAsync } from 'react-async';\r\nimport InfoModal from './InfoModal';\r\n\r\nconst override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n`;\r\n\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nfunction Upload() {\r\n    const [state, SetState] = useState({\r\n        error: false,\r\n        fail: false,\r\n        predictions: '',\r\n        loading: false,\r\n        fileName: '',\r\n        hash: '',\r\n        vote: [],\r\n        showResult: false,\r\n        bannerStatus: false,\r\n        reload: false\r\n    });\r\n\r\n    const clear = () => {\r\n        SetState({\r\n            ...state,\r\n            error: false,\r\n            fail: false,\r\n            predictions: '',\r\n            loading: false,\r\n            fileName: '',\r\n            hash: '',\r\n            vote: [],\r\n            showResult: false,\r\n            bannerStatus: false,\r\n            reload: true,\r\n            house: undefined\r\n        });\r\n    };\r\n\r\n    const showBanner = status => {\r\n        SetState(status); // 지정한 status로 state를 변경하여 Banner를 표시.\r\n        setTimeout(function() {\r\n            // 3초 후 state를 원상복귀 함으로써 3초 동안만 Banner를 표시해 주는것.\r\n            SetState({ bannerStatus: false, error: false, fail: false });\r\n        }, 3000);\r\n    };\r\n\r\n    // https://blog.shovonhasan.com/using-promises-with-filereader/\r\n    // 비동기적으로 처리되는 파일 읽기 작업은 마찬가지로 비동기적으로 처리되는 axios보다 먼저 수행될 필요가 있다.\r\n    // 파일 읽기가 axios보다 선행되지 않은 경우 그림 파일을 캔버스에 렌더링하지 못하는 문제가 있었던 것.\r\n    // Promise로 FileReader를 감싸줌으로써 이를 해결.\r\n    const readFileAsync = (inputFile) =>{\r\n        // FileReader -> 비동기적으로 데이터 read. File 또는 Blob 객체를 이용해 파일을 읽고 저장.\r\n        const reader = new FileReader();\r\n\r\n        return new Promise((resolve, reject) =>{\r\n            reader.onerror = () =>{\r\n                reader.abort();\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.onload = () =>{  // read File에 성공했을 때,\r\n                const output = document.getElementById('preview');\r\n                output.src = reader.result;\r\n                console.log(\"%conLoad.output = \", 'color:green', output);\r\n                console.log(document.getElementById(\"imageCanvas\"));\r\n                resolve(reader.result);\r\n            }\r\n            reader.readAsDataURL(inputFile[0]); // read file\r\n        })\r\n    }\r\n    \r\n    const onDrop = async event => {\r\n        console.log('UPLOAD.js -> onDrop -> event = ', event);\r\n        // Dropzone에 파일을 올리면, loading = T 상태로 변경.\r\n        SetState({\r\n            ...state,\r\n            predictions: '',\r\n            loading: true,\r\n            fileName: '',\r\n            hash: '',\r\n            vote: [],\r\n            showResult: false\r\n        });\r\n        const pictureFiles = event;\r\n        const content = await readFileAsync(pictureFiles);\r\n        const canvas = document.getElementById('imageCanvas'); // canvas를 가져와 그릴 준비\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (pictureFiles.length > 0) {\r\n            const formData = new FormData(); // 서버에 text가 아닌 file을 보낼 때 FormData()를 사용\r\n            formData.append('image', pictureFiles[0], pictureFiles[0].name);\r\n            console.log(\"FORMDATA === \", formData);\r\n\r\n            const start = new Date().getTime();\r\n            let imagePost = async () => {   // Node.js 서버로 사진 보내기\r\n                try {\r\n                    console.log('ASYNC');\r\n                    console.log(formData);\r\n                    return await axios.post(\r\n                        'https://theraphy-nodejs-heroku2.herokuapp.com/',\r\n                        //'http://localhost:3001/',\r\n                        formData\r\n                    );\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            };\r\n            let response = await imagePost(); // 서버 응답받기\r\n\r\n            const elapsed = new Date().getTime() - start;\r\n            console.log(\"%c소요된 시간 == \",'color:green', elapsed);\r\n            console.log('AWAIT');\r\n            console.log('response = ', response);\r\n            console.log('response.data = ', response.data);\r\n            if (!response) {\r\n                // 에러가 있으면,\r\n                console.log('IN1');\r\n                showBanner({ error: true });\r\n            } else {\r\n                const img = document.getElementById('preview');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                if(response.data.success !== false){\r\n                    // 에러가 없으면, 캔버스에 그리기\r\n                    if (response.data[0][0].success === true) {\r\n                        console.log('rseponse.data[0] = ', response.data[0]);\r\n                        console.log('response.data[0][0] = ', response.data[0][0]);\r\n                        console.log('response.data[1][0] = ', response.data[1][0]);\r\n                        for(let i=0; i<response.data.length; i++){\r\n                            console.log(response.data[i][0]);\r\n                            let caption = (text => {\r\n                                return { 'house': '집', 'window': '창문', 'door': '현관문', 'triangle roof': '뾰족한 지붕', 'fense': '울타리', 'smoking chimney': '연기나는 굴뚝' }[text];\r\n                            })(response.data[i][0].label);\r\n                            const { x, y, width, height } = response.data[i][0].coordinate;\r\n                            let color = getRandomColor();\r\n                            console.log(response.data[0][0].house);\r\n                            \r\n                            // stroke()는 이전에 그렸던 path를 다음번에도 그리는 습성이 있는데, beginPath()로 초기화. 색상 지정을 위함.\r\n                            ctx.beginPath();    \r\n                            ctx.lineWidth = \"4\";\r\n                            ctx.font=\"bold 50px sans-serif\";\r\n                            ctx.fillStyle= color;   \r\n                            ctx.strokeStyle = color;\r\n                            ctx.fillText(caption + \" \" + response.data[i][0].score.toFixed(3), x, y-10);\r\n                            ctx.rect(x, y, width, height);\r\n                            ctx.stroke();\r\n\r\n                            if(i===0){\r\n                                SetState({\r\n                                    ...state,\r\n                                    predictions: caption,\r\n                                    loading: false,\r\n                                    fileName: response.data[0][0].path,\r\n                                    hash: response.data[0][0].hash,\r\n                                    vote: [\r\n                                        response.data[0].voteChaewon,\r\n                                        response.data[0].voteYuri,\r\n                                        response.data[0].voteYena\r\n                                    ],\r\n                                    showResult: true,\r\n                                    house: response.data[0][0].house\r\n                                })\r\n                            }else{\r\n                                SetState({\r\n                                    ...state,\r\n                                    predictions: caption,\r\n                                    loading: false,\r\n                                    showResult: true,\r\n                                    house: response.data[0][0].house\r\n                                })\r\n                            }\r\n                            console.log(\"%cSTATE(ONDROP) == \",'color:blue', state);\r\n                        };\r\n                    }\r\n                } else {\r\n                    console.log('IN2');\r\n                    ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                    SetState({\r\n                        ...state,\r\n                        predictions: 'fail to find',\r\n                        loading: false,\r\n                        fileName: response.data.path,\r\n                        hash: response.data.hash\r\n                    });\r\n                    showBanner({ fail: true });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const paste = event => {\r\n            clear();\r\n            const items = (event.clipboardData || event.originalEvent.clipboardData).items;\r\n            console.log(JSON.stringify(items));\r\n            var blob = null;\r\n            for (var i = 0; i < items.length; i++) {\r\n                if (items[i].type.indexOf('image') === 0) {\r\n                    blob = items[i].getAsFile();\r\n                }\r\n            }\r\n            if (blob !== null) {\r\n                console.log(blob);\r\n                onDrop([blob]);\r\n            }\r\n        };\r\n        window.addEventListener('paste', paste);\r\n    });\r\n\r\n    return (\r\n        <div className=\"back\">\r\n            <Banner\r\n                className=\"banner\"\r\n                title=\"응답이 제출되었습니다.\"\r\n                showBanner={state.bannerStatus}\r\n            />\r\n            <Banner\r\n                css={{ backgroundColor: 'red', color: 'white' }}\r\n                className=\"banner\"\r\n                title=\"잘못된 파일이거나, 서버가 응답할 수 없습니다.\"\r\n                showBanner={state.error}\r\n            />\r\n            <Banner\r\n                css={{ backgroundColor: 'yellow' }}\r\n                className=\"banner\"\r\n                title=\"얼굴을 찾을 수 없습니다.\"\r\n                showBanner={state.fail}\r\n            />\r\n            <div className=\"bodyDiv\">\r\n                <InfoModal></InfoModal>\r\n                <img className=\"preview\" id=\"preview\" alt=\"프리뷰\" />\r\n                <div className=\"upload\">\r\n                    <IconButton className=\"iconButton\" onClick={clear} size=\"small\">\r\n                        <RefreshIcon className=\"refresh\" fontSize=\"large\" />\r\n                    </IconButton>\r\n                    <div className=\"upload-files\">\r\n                        <header>\r\n                            <p>\r\n                                <span className=\"up\">HTP</span>\r\n                                <span className=\"load\">검사</span>\r\n                            </p>\r\n                        </header>\r\n                        <div className=\"body\">\r\n                            {!state.loading && !state.showResult ? ( \r\n                                // loading=F , showResult=F\r\n                                // 로딩중도 아니고 결과를 보여줘야 하는 상황도 아니라면, 파일 업로드를 위한 Dropzone UI 출력\r\n                                <div className=\"uploadBox\">\r\n                                    <Dropzone\r\n                                        multiple={false}\r\n                                        onDrop={acceptedFiles => onDrop(acceptedFiles)}\r\n                                    >\r\n                                        {({ getRootProps, getInputProps }) => (\r\n                                            <section className=\"dropSection\">\r\n                                                {/* <div className=\"dropBox\" {...getRootProps(this.style)}> */}\r\n                                                <div className=\"dropBox\" {...getRootProps()}>\r\n                                                    <input\r\n                                                        className=\"dropzone\"\r\n                                                        {...getInputProps({\r\n                                                            type: 'file',\r\n                                                            accept: 'image/*'\r\n                                                        })}\r\n                                                    />\r\n                                                    <div className=\"dropText\">\r\n                                                        <p\r\n                                                            className={\r\n                                                                state.reload ? 'nomalP' : 'fadeP'\r\n                                                            }\r\n                                                        >\r\n                                                            업로드할 파일을 드래그하거나\r\n                                                        </p>\r\n                                                        <p\r\n                                                            className={\r\n                                                                state.reload ? 'nomalP' : 'fadeP'\r\n                                                            }\r\n                                                        >\r\n                                                            박스를{' '}\r\n                                                            <span style={{ color: 'lightBlue' }}>\r\n                                                                {' '}\r\n                                                                클릭\r\n                                                            </span>\r\n                                                            해주세요\r\n                                                        </p>\r\n                                                        <br />\r\n                                                        <p\r\n                                                            className={\r\n                                                                state.reload ? 'nomalP' : 'fadeP'\r\n                                                            }\r\n                                                        >\r\n                                                            <span style={{ color: 'lightBlue' }}>\r\n                                                                Ctrl+V\r\n                                                            </span>\r\n                                                            로 클립보드에 있는 이미지를\r\n                                                        </p>\r\n                                                        <p\r\n                                                            className={\r\n                                                                state.reload ? 'nomalP' : 'fadeP'\r\n                                                            }\r\n                                                        >\r\n                                                            붙여 넣을 수 있습니다.\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </section>\r\n                                        )}\r\n                                    </Dropzone>\r\n                                </div>\r\n                            ) : (\r\n                                // 1. Loading이 T이고 showResult가 F일 때, 2. Loading이 F이고 showResult가 T일 때 모두 진입\r\n                                <div className=\"imageBox\">\r\n                                    <div className=\"imageTable\">\r\n                                        <canvas className=\"imageCanvas\" id=\"imageCanvas\">\r\n                                            이 브라우저는 'canvas'기능을 제공하지 않습니다.\r\n                                        </canvas>\r\n                                        {state.showResult ? ( //  showResult가 T인 경우, 결과 출력\r\n                                            <div className=\"resultBox\">\r\n                                                <div className=\"resultDiv\">\r\n                                                    {/* 분석 결과 : {state.predictions} */}\r\n                                                </div>\r\n                                                <div className=\"resultDiv\">\r\n                                                    <AnimatedModal\r\n                                                        banner={showBanner}\r\n                                                        clear={clear}\r\n                                                        fileName={state.fileName}\r\n                                                        hash={state.hash}\r\n                                                        prediction={state.predictions}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : null}\r\n                                        {/* 로딩중 이미지 출력 */}\r\n                                        <div className=\"loadingBox\">\r\n                                            <PropagateLoader\r\n                                                css={override}\r\n                                                size={25}\r\n                                                color={'#FF509F'}\r\n                                                loading={state.loading}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* {console.log(\"!STATE.LOADING = \", !state.loading)} */}\r\n                {/* {console.log(\"!STATE.SHOWRESULT = \", !state.showResult)} */}\r\n                {/* {console.log(\"&& = \", !state.loading && !state.showResult)} */}\r\n                {console.log(\"STATE.HOUSE =\",state.house)}\r\n                {console.log(\"%cSTATE(RENDER) == \",'color:red', state)}\r\n                \r\n                {/* loading=F, showResult=F, house =F인 경우에만 조건문이 T가 되어 null을 출력 \r\n                그 외의 경우 = Loading=T, showResult=F, house=F인 경우나,\r\n                Loading=F, showResult=T, house=T인 경우에 조건문이 F가 되어서 테이블을 출력. */}\r\n                {!state.loading && !state.showResult && !state.house ? null : (\r\n                    <Table house={state.house}></Table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Upload;\r\n","import React from 'react';\r\nimport Upload from './Upload';\r\n\r\nfunction App() {\r\n    // 클라이언트 사이드(react)에서 프록시를 통해 서버 사이드(node.js)로 데이터 요청\r\n    // componetDidMount는 첫 렌더링이 완료된 후 진행되며 fetch를 이용하여 서버 사이드로 url 요청을 할 수 있다.\r\n    // 요청한 데이터(title)을 받아서 setState()를 이용하여 state를 변경하면 리액트 앱은 다시 렌더링하여 웹 페이지에 표시.\r\n\r\n    // useEffect(() => {\r\n    //   fetch(\"http://localhost:3001/testTitle\")\r\n    //     .then((res) => res.json())\r\n    //     .then((title) => setTitle(title));\r\n    // }, []);\r\n\r\n    // fetch('request url', {\r\n    //   method: 'POST',\r\n    //   body,\r\n    // }).then((res) => {\r\n    //   //...\r\n    // });\r\n\r\n    // axios.post('request url', data)\r\n    // .then(function (res) {\r\n    //   //...\r\n    // })\r\n\r\n    // 컴포넌트가 처음 렌더링 될 때 무엇을 하겠다 = useEffect\r\n    // useEffect(() => {\r\n    //     const response = axios.get('http://localhost:3001/testTitle');\r\n    //     console.log('axios get from App.js');\r\n    //     console.log(response);\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <Upload />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}